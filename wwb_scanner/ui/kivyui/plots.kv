<GraphViewControls>:
    orientation: 'horizontal'
    h_slider: h_slider
    zoom_in_btn: zoom_in_btn
    zoom_out_btn: zoom_out_btn
    Slider:
        id: h_slider
        orientation: 'horizontal'
        size_hint_x: .9
        range: root.h_scroll_range
        step: root.h_scroll_step
        value: root.h_scroll_value
        on_value: root.h_scroll_value = self.value
    BoxLayout:
        orientation: 'horizontal'
        size_hint_x: .1
        Button:
            id: zoom_in_btn
            text: '+'
            on_press: root.on_zoom_btn_press(self)
            on_release: root.on_zoom_btn_release(self)
        Button:
            id: zoom_out_btn
            text: '-'
            on_press: root.on_zoom_btn_press(self)
            on_release: root.on_zoom_btn_release(self)
            
<SpectrumGraph>:
    tick_container: tick_container
    graph_overlay: graph_overlay
    spectrum_plot_container: spectrum_plot_container
    TickContainer:
        id: tick_container
        spectrum_graph: root
        pos_hint: {'x':0, 'y':0}
        size_hint: [1., 1.]
    GraphOverlay:
        id: graph_overlay
        spectrum_graph: root
        pos_hint: {'x':0, 'y':0}
        size_hint: [1., 1.]
    RelativeLayout:
        id: spectrum_plot_container
        pos_hint: {'x':0, 'y':0}
        size_hint:[1., 1.]
        
<SpectrumGraphSimple>:
    spectrum_plot_container: spectrum_plot_container
    RelativeLayout:
        id: spectrum_plot_container
        pos_hint: {'x':0, 'y':0}
        size_hint:[1., 1.]
    
<GraphOverlay>:
    label_widget: label_widget
    crosshair_widget: crosshair_widget
    Label:
        id: label_widget
        top: root.top
        center_x: root.center_x
        text: root.label_text
    GraphCrosshair:
        id: crosshair_widget
        pos: root.pos
        size: root.size
        
<SpectrumPlot>:
    pos_hint: {'x':0, 'y':0}
    size_hint: [1., 1.]
    canvas:
        StencilPush
        Rectangle:
            pos: self.pos
            size: self.size
        StencilUse
        Color:
            rgba: self.color
        Line:
            points: self.points
        StencilUnUse
        Rectangle:
            pos: self.pos
            size: self.size
        StencilPop
        
<ColorButton@Button>:
    on_press: print("pressed")
    
<PlotToolPanel>:
    cols: 1
    rows: 8
    row_default_height: self.height / self.rows
    row_force_default: True
    size_hint_x: .2
    canvas:
        Color:
            rgb: .8, .8, .8
        Line:
            rectangle: self.x+1, self.y+1,self.width-1, self.height-1
    
<PlotTools>:
    orientation: 'vertical'
    label_widget: label_widget
    switch_widget: switch_widget
    color_btn: color_btn
    root_widget: app.root
    canvas:
        Color:
            rgb: .8, .8, .8
        Line:
            rectangle: self.x+1, self.y+1,self.width-1, self.height-1
    Label:
        id: label_widget
        text: self.parent.plot.name
        size_hint_y: .5
    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: .5
        CheckBox:
            id: selected_checkbox
            group: 'selected_plot'
            active: self.parent.parent.plot.selected
            on_active: self.parent.parent.plot.selected = self.active
        CheckBox:
            id: switch_widget
            active: self.parent.parent.plot.enabled
            on_active: self.parent.parent.plot.enabled = self.active
        ColorButton:
            id: color_btn
            on_release: self.parent.parent.on_color_btn_release()
            canvas.after:
                Color:
                    rgba: self.parent.parent.plot.color
                Rectangle:
                    size: self.size
                    pos: self.pos
        
<PlotColorPicker>:
    orientation: 'vertical'
    spacing: 2
    color_picker: color_picker
    ok_btn: ok_btn
    cancel_btn: cancel_btn
    ColorPicker:
        id: color_picker
        color: root.color
        on_color: root.color[:3] = self.color[:3]
    BoxLayout:
        orientation: 'vertical'
        size_hint_y: .2
        Label:
            text: 'Alpha'
        BoxLayout:
            orientation: 'horizontal'
            Label:
                text: '%05.3f' % (alpha_slider.value)
            Slider:
                id: alpha_slider
                min: 0.0
                max: 1.0
                value: root.color[3]
                on_value: root.color[3] = self.value
    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: .1
        Button:
            id: ok_btn
            text: 'Ok'
            on_release: root.dispatch('on_select', root)
        Button:
            id: cancel_btn
            text: 'Cancel'
            on_release: root.dispatch('on_cancel', root)
